## Architecture
ARCH=ia32

.PHONY: depend all clean

## Target toolchain prefix
CROSS_COMPILE=

## command locations
SH=/bin/sh
RM=rm
MAKE=make
LN=ln
CP=cp

AS=$(CROSS_COMPILE)as
AS86=$(CROSS_COMPILE)as
GCC=$(CROSS_COMPILE)gcc
CC=$(CROSS_COMPILE)gcc
LD=$(CROSS_COMPILE)ld
STRIP=$(CROSS_COMPILE)strip

# Default target
TARGET: all

# Compiler flags
CFLAGS=-pipe -Os -Wall -ffreestanding -fno-stack-protector \
	-Wsign-compare -Wcast-align -Waggregate-return \
	-Wstrict-prototypes -Wmissing-prototypes \
	-Wmissing-declarations -Wmissing-noreturn \
	-Wmissing-format-attribute \
	-I$(TOPDIR)/include

# templates
%.o: %.c
	$(GCC) $(CFLAGS) -c -o $@ $<
%.o: %.S
	$(GCC) $(CFLAGS) -c -o $@ $<

# Generate dependencies
Make.dep:
	gcc $(CFLAGS) -M $(wildcard *.c) $(wildcard *.S) > $@

depend: Make.dep

# Include the dependency file if one exists
ifeq (Make.dep, $(wildcard Make.dep))
include Make.dep
endif
